Object subclass: #AlgoPedidos	instanceVariableNames: 'pedidos'	classVariableNames: ''	package: 'TP1'!!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Mateo 12/3/2020 14:44'!obtenerPedido: unCliente	^pedidos at: unCliente.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Mateo 12/3/2020 14:44'!agregarCuponAPedidoDe: unCliente conValor: unValor	| cupon |	self chequearSiEstaElPedidoDe: unCliente. 	cupon := CuponFijo  conValor: unValor.  (self obtenerPedido: unCliente) usarCupon: cupon.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Mateo 12/3/2020 14:49'!chequearSiEstaElPedidoDe: unCliente 	pedidos at: unCliente ifAbsent:[ PedidoNoEstaError signal].! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Mateo 12/5/2020 16:53'!crearPedidoConDeliveryPara: unNombre	|elPedido|	elPedido := Pedido new.	elPedido activarEnvio.	pedidos at: unNombre put: elPedido.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Mateo 12/8/2020 14:57'!removerMenuConNombre: unMenu para: unCliente 	self chequearSiEstaElPedidoDe: unCliente. 	(self obtenerPedido: unCliente) eliminarItem: unMenu. 	! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Mateo 12/3/2020 14:48'!cantidadProductosEnPedidoDe: unCliente 	self chequearSiEstaElPedidoDe: unCliente. 	^(self obtenerPedido: unCliente) obtenerCantidad.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Mateo 12/7/2020 16:57'!actualizarProductoConNombre: unItem conCantidad: unaCantidad  para: unCliente 	self chequearSiEstaElPedidoDe: unCliente. 	(self obtenerPedido: unCliente) actualizarCantidadDe: unItem A: unaCantidad. ! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Mateo 12/3/2020 14:47'!agregarCuponAPedidoDe: unCliente conPorcentaje: unPorcentaje	| cupon |	self chequearSiEstaElPedidoDe: unCliente. 	cupon := CuponPorcentual conPorcentaje: unPorcentaje.	(self obtenerPedido: unCliente) usarCupon: cupon.	! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Mateo 12/5/2020 17:01'!crearPedidoParaRetirarPara: unNombre	|elPedido|	elPedido := Pedido new.	pedidos at: unNombre put: elPedido.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Mateo 12/5/2020 13:34'!agregarProductoConNombre: unProducto precio: unPrecio yCantidad: unaCantidad para: unCliente	|producto|	self chequearSiEstaElPedidoDe: unCliente. 	producto:= Producto conNombre: unProducto precio: unPrecio yCantidad: unaCantidad.	(self obtenerPedido: unCliente) agregar: unaCantidad de: producto.	! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Mateo 12/3/2020 14:49'!precioPedidoDe: unCliente	self chequearSiEstaElPedidoDe: unCliente. 	^((self obtenerPedido: unCliente) obtenerPrecio).! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Mateo 12/4/2020 14:40'!removerCuponDePedidoDe: unCliente	self chequearSiEstaElPedidoDe: unCliente. 	(self obtenerPedido: unCliente) eliminarCupon.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Mateo 12/5/2020 14:06'!agregarMenuConNombre: unMenu precio: unPrecio yCantidad: unaCantidad  para: unCliente	|menu|	self chequearSiEstaElPedidoDe: unCliente. 	menu:= Menu conNombre: unMenu precio: unPrecio yCantidad: unaCantidad.	(self obtenerPedido: unCliente) agregar: unaCantidad de: menu.! !!AlgoPedidos methodsFor: 'as yet unclassified' stamp: 'Mateo 12/3/2020 14:49'!removerProductoConNombre: unPoducto para: unCliente	self chequearSiEstaElPedidoDe: unCliente. 	(self obtenerPedido: unCliente) eliminarItem: unPoducto. ! !!AlgoPedidos methodsFor: 'initialization' stamp: 'Mateo 10/27/2020 17:17'!initialize	pedidos := Dictionary  new.! !Object subclass: #AumentoEnvio	instanceVariableNames: 'costo'	classVariableNames: ''	package: 'TP1'!!AumentoEnvio methodsFor: 'initialization' stamp: 'Mateo 12/5/2020 16:47'!initialize 	costo := 1.! !!AumentoEnvio methodsFor: 'as yet unclassified' stamp: 'Mateo 12/5/2020 16:47'!activarEnvio	costo := 1.2! !!AumentoEnvio methodsFor: 'as yet unclassified' stamp: 'Mateo 12/8/2020 16:02'!aumentarPrecio: unPrecio 	(unPrecio < 0) ifTrue: [ ValorInvalidoError signal ]. 	^unPrecio * costo.! !Object subclass: #Cupon	instanceVariableNames: 'valorInicial porcentajeInicial valor porcentaje'	classVariableNames: ''	package: 'TP1'!!Cupon methodsFor: 'as yet unclassified' stamp: 'Mateo 12/8/2020 21:43'!validarDescuento: validacion	self subclassResponsibility ! !!Cupon methodsFor: 'as yet unclassified' stamp: 'Mateo 12/5/2020 16:00'!asignarValor: unValor self subclassResponsibility.! !!Cupon methodsFor: 'as yet unclassified' stamp: 'Mateo 12/8/2020 14:55'!aplicarDescuento: unPrecio	self subclassResponsibility.! !Cupon subclass: #CuponFijo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!CuponFijo methodsFor: 'as yet unclassified' stamp: 'Mateo 12/5/2020 15:29'!validarDescuento: validacion	valor := valor * validacion.! !!CuponFijo methodsFor: 'as yet unclassified' stamp: 'Mateo 12/8/2020 14:58'!asignarValor: unValor 	valor := unValor.! !!CuponFijo methodsFor: 'as yet unclassified' stamp: 'Mateo 12/7/2020 15:52'!aplicarDescuento: unPrecio	| precio |	precio := unPrecio - valor.	(precio < 0) ifTrue: [ ^0 ].	^precio! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CuponFijo class	instanceVariableNames: ''!!CuponFijo class methodsFor: 'as yet unclassified' stamp: 'Mateo 11/4/2020 23:55'!conValor: unValor	| cupon |	(unValor < 0) ifTrue: [ValorInvalidoError signal].	cupon := CuponFijo new.	cupon asignarValor: unValor.	^cupon.	! !Cupon subclass: #CuponNulo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!CuponNulo methodsFor: 'as yet unclassified' stamp: 'Mateo 12/5/2020 13:37'!validarDescuento: validacion	valor := 0.! !!CuponNulo methodsFor: 'as yet unclassified' stamp: 'Mateo 12/5/2020 16:01'!asignarValor: unValor ! !!CuponNulo methodsFor: 'as yet unclassified' stamp: 'Mateo 12/5/2020 13:30'!aplicarDescuento: unPrecio	^unPrecio! !Cupon subclass: #CuponPorcentual	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!CuponPorcentual methodsFor: 'as yet unclassified' stamp: 'Mateo 12/5/2020 15:34'!aplicarDescuento: unPrecio	^unPrecio * porcentaje .! !!CuponPorcentual methodsFor: 'as yet unclassified' stamp: 'Mateo 12/8/2020 14:59'!asignarValor: unValor 	porcentaje := (100 - unValor )/100.! !!CuponPorcentual methodsFor: 'as yet unclassified' stamp: 'Mateo 12/5/2020 15:34'!validarDescuento: validacion	(validacion = 0) ifTrue: [ porcentaje := 1 ].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CuponPorcentual class	instanceVariableNames: ''!!CuponPorcentual class methodsFor: 'as yet unclassified' stamp: 'Mateo 12/5/2020 16:00'!conPorcentaje: unPorcentaje	| cupon |	(unPorcentaje <0) ifTrue: [ValorInvalidoError signal]. 	(unPorcentaje > 100) ifTrue: [ValorInvalidoError signal]. 	cupon := CuponPorcentual new.	cupon asignarValor: unPorcentaje .	^cupon.! !Object subclass: #Item	instanceVariableNames: 'precio nombre cantidad'	classVariableNames: ''	package: 'TP1'!!Item methodsFor: 'as yet unclassified' stamp: 'Mateo 10/28/2020 15:35'!asignarNombre: unNombre	nombre := unNombre. ! !!Item methodsFor: 'as yet unclassified' stamp: 'Mateo 12/7/2020 16:56'!cambiarCantidad: unaCantidad	(unaCantidad < 0) ifTrue: [ValorInvalidoError signal].	cantidad := unaCantidad.! !!Item methodsFor: 'as yet unclassified' stamp: 'Mateo 10/29/2020 17:26'!Precio	^precio * cantidad.! !!Item methodsFor: 'as yet unclassified' stamp: 'Mateo 10/29/2020 17:53'!obtenerNombre	^nombre.! !!Item methodsFor: 'as yet unclassified' stamp: 'Mateo 12/8/2020 21:24'!validarDescuento 	self subclassResponsibility ! !!Item methodsFor: 'as yet unclassified' stamp: 'Mateo 10/29/2020 17:27'!asignarPrecio: unPrecio YCantidad: unaCantidad 	precio := unPrecio.	cantidad :=  unaCantidad.! !!Item methodsFor: 'as yet unclassified' stamp: 'Mateo 10/29/2020 17:42'!tenerCantidad	^cantidad.! !!Item methodsFor: 'initialization' stamp: 'Mateo 11/6/2020 19:30'!initialize 	cantidad := 0.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Item class	instanceVariableNames: ''!!Item class methodsFor: 'as yet unclassified' stamp: 'Mateo 11/6/2020 19:31'!conNombre: unProducto precio: unPrecio yCantidad: unaCantidad	| producto |	(unPrecio < 0) ifTrue: [ValorInvalidoError signal].	(unaCantidad < 0) ifTrue: [ValorInvalidoError signal].	producto := Item new.	producto asignarNombre: unProducto. 	producto asignarPrecio: unPrecio YCantidad: unaCantidad.	^producto .! !Error subclass: #ItemNoEstaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Item subclass: #Menu	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Menu methodsFor: 'as yet unclassified' stamp: 'Mateo 12/8/2020 21:25'!validarDescuento: unCupon	unCupon validarDescuento: 0.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Menu class	instanceVariableNames: ''!!Menu class methodsFor: 'as yet unclassified' stamp: 'Mateo 12/5/2020 13:36'!conNombre: unMenu precio: unPrecio yCantidad: unaCantidad	| menu |	(unPrecio < 0) ifTrue: [ValorInvalidoError signal].	(unaCantidad < 0) ifTrue: [ValorInvalidoError signal].	menu := Menu new.	menu asignarNombre: unMenu. 	menu asignarPrecio: unPrecio YCantidad: unaCantidad.	^menu.! !Object subclass: #Pedido	instanceVariableNames: 'productos cupon aumentoEnvio'	classVariableNames: ''	package: 'TP1'!!Pedido methodsFor: 'as yet unclassified' stamp: 'Mateo 12/8/2020 15:23'!agregar: unaCantidad de: unItem 	productos add: unItem.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Mateo 11/2/2020 22:13'!eliminarItem: unItem	productos detect: [:unProducto | unProducto obtenerNombre = unItem] ifNone:[ ItemNoEstaError signal].	productos remove: (productos detect: [:unProducto | unProducto obtenerNombre = unItem]).	! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Mateo 12/4/2020 14:40'!eliminarCupon	cupon := CuponNulo new.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Mateo 10/29/2020 23:00'!usarCupon: unCupon	cupon := unCupon.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Mateo 11/2/2020 22:10'!actualizarCantidadDe: unItem A: unaCantidad	productos detect: [:unProducto | unProducto obtenerNombre = unItem] ifNone:[ ItemNoEstaError signal].	(productos detect: [:unProducto | unProducto obtenerNombre = unItem]) cambiarCantidad: unaCantidad.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Mateo 10/30/2020 16:13'!obtenerCantidad	| cantidad |	cantidad:= 0.	productos do:[:unProducto|		cantidad:= cantidad + (unProducto tenerCantidad) 	].	^cantidad.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Mateo 12/5/2020 16:52'!activarEnvio 	aumentoEnvio activarEnvio.! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Mateo 12/8/2020 21:24'!obtenerPrecio	| elPrecio |	elPrecio := 0.	productos do:[:unProducto|		elPrecio := elPrecio + unProducto Precio	].	self validarDescuento.	^aumentoEnvio aumentarPrecio:(cupon aplicarDescuento: elPrecio).! !!Pedido methodsFor: 'as yet unclassified' stamp: 'Mateo 12/8/2020 21:25'!validarDescuento	productos do:[:unItem|		unItem validarDescuento: cupon	].	! !!Pedido methodsFor: 'initialization' stamp: 'Mateo 12/5/2020 16:51'!initialize 	aumentoEnvio := AumentoEnvio new.	productos := OrderedCollection new.	cupon:= CuponNulo new.! !Error subclass: #PedidoNoEstaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Item subclass: #Producto	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Producto methodsFor: 'as yet unclassified' stamp: 'Mateo 12/8/2020 21:25'!validarDescuento: unCupon	unCupon validarDescuento: 1.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Producto class	instanceVariableNames: ''!!Producto class methodsFor: 'as yet unclassified' stamp: 'Mateo 12/5/2020 13:36'!conNombre: unProducto precio: unPrecio yCantidad: unaCantidad	| producto |	(unPrecio < 0) ifTrue: [ValorInvalidoError signal].	(unaCantidad < 0) ifTrue: [ValorInvalidoError signal].	producto := Producto new.	producto asignarNombre: unProducto. 	producto asignarPrecio: unPrecio YCantidad: unaCantidad.	^producto .! !Error subclass: #ValorInvalidoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!